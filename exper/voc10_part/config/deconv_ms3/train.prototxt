name: "${NET_ID}"

layer {
  name: "data"
  type: "ImageSegData"
  top: "data"
  top: "label"
  image_data_param {
    root_folder: "${DATA_ROOT}"
    source: "${EXP}/list/${TRAIN_SET}.txt"
    label_type: PIXEL
    batch_size: 2
    shuffle: true
  }
  transform_param {
    mean_value: 104.008
    mean_value: 116.669
    mean_value: 122.675
    crop_size: 320
    mirror: true
  }
  include: { phase: TRAIN }
}

############################## NETWORK ##########################
# conv1_1
layer {  bottom: "data"  top: "conv1_1"  name: "conv1_1"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 64    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv1_1' top: 'conv1_1' name: 'bn1_1' type: "BatchNorm" 
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
            } }


layer {  bottom: "conv1_1"  top: "conv1_1"  name: "relu1_1"  type: "ReLU"}

# conv1_2
layer {  bottom: "conv1_1"  top: "conv1_2"  name: "conv1_2"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 64    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv1_2' top: 'conv1_2' name: 'bn1_2' type: "BatchNorm" 
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }


layer {  bottom: "conv1_2"  top: "conv1_2"  name: "relu1_2"  type: "ReLU"}

# pool1
layer {
  bottom: "conv1_2"  top: "pool1" top:"pool1_mask"  name: "pool1"  type: "Pooling"
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}

# 112 x 112
# conv2_1
layer {  bottom: "pool1"  top: "conv2_1"  name: "conv2_1"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 128    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv2_1' top: 'conv2_1' name: 'bn2_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }


layer {  bottom: "conv2_1"  top: "conv2_1"  name: "relu2_1"  type: "ReLU"}
# conv2_2
layer {  bottom: "conv2_1"  top: "conv2_2"  name: "conv2_2"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 128    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv2_2' top: 'conv2_2' name: 'bn2_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv2_2"  top: "conv2_2"  name: "relu2_2"  type: "ReLU"}

# pool2
layer {
  bottom: "conv2_2"  top: "pool2" top: "pool2_mask" name: "pool2"  type: "Pooling"
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}

# 56 x 56
# conv3_1
layer {  bottom: "pool2"  top: "conv3_1"  name: "conv3_1"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 256    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv3_1' top: 'conv3_1' name: 'bn3_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv3_1"  top: "conv3_1"  name: "relu3_1"  type: "ReLU"}
# conv3_2
layer {  bottom: "conv3_1"  top: "conv3_2"  name: "conv3_2"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 256    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv3_2' top: 'conv3_2' name: 'bn3_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv3_2"  top: "conv3_2"  name: "relu3_2"  type: "ReLU"}
# conv3_3
layer {  bottom: "conv3_2"  top: "conv3_3"  name: "conv3_3"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 256    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv3_3' top: 'conv3_3' name: 'bn3_3' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv3_3"  top: "conv3_3"  name: "relu3_3"  type: "ReLU"}

# pool3
layer {
  bottom: "conv3_3"  top: "pool3" top: "pool3_mask"  name: "pool3"  type: "Pooling"
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}

# 28 x 28
# conv4_1
layer {  bottom: "pool3"  top: "conv4_1"  name: "conv4_1"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 512    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv4_1' top: 'conv4_1' name: 'bn4_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv4_1"  top: "conv4_1"  name: "relu4_1"  type: "ReLU"}
# conv4_2
layer {  bottom: "conv4_1"  top: "conv4_2"  name: "conv4_2"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 512    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv4_2' top: 'conv4_2' name: 'bn4_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv4_2"  top: "conv4_2"  name: "relu4_2"  type: "ReLU"}
# conv4_3
layer {  bottom: "conv4_2"  top: "conv4_3"  name: "conv4_3"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 512    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv4_3' top: 'conv4_3' name: 'bn4_3' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv4_3"  top: "conv4_3"  name: "relu4_3"  type: "ReLU"}

# pool4
layer {
  bottom: "conv4_3"  top: "pool4" top: "pool4_mask"  name: "pool4"  type: "Pooling"
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}

# 14 x 14
# conv5_1
layer {  bottom: "pool4"  top: "conv5_1"  name: "conv5_1"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 512    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv5_1' top: 'conv5_1' name: 'bn5_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv5_1"  top: "conv5_1"  name: "relu5_1"  type: "ReLU"}
# conv5_2
layer {  bottom: "conv5_1"  top: "conv5_2"  name: "conv5_2"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 512    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv5_2' top: 'conv5_2' name: 'bn5_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv5_2"  top: "conv5_2"  name: "relu5_2"  type: "ReLU"}
# conv5_3
layer {  bottom: "conv5_2"  top: "conv5_3"  name: "conv5_3"  type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param {    num_output: 512    pad: 1    kernel_size: 3  }}

layer { bottom: 'conv5_3' top: 'conv5_3' name: 'bn5_3' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "conv5_3"  top: "conv5_3"  name: "relu5_3"  type: "ReLU"}

# pool5
layer {
  bottom: "conv5_3"  top: "pool5" top: "pool5_mask"  name: "pool5"  type: "Pooling"
  pooling_param {    pool: MAX    kernel_size: 2    stride: 2  }
}

# 7 x 7 x 4096 -> 3 x 3 x 1024
# fc6
layer { bottom: 'pool5' top: 'fc6' name: 'fc6' type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { kernel_size: 3 num_output: 1024 pad: 1} }

layer { bottom: 'fc6' top: 'fc6' name: 'bnfc6' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "fc6"  top: "fc6"  name: "relu6"  type: "ReLU"}

# 1 x 1 x 4096 -> 1 x 1 x 1024
# fc7
layer { bottom: 'fc6' top: 'fc7' name: 'fc7' type: "Convolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { kernel_size: 1 num_output: 1024 } }

layer { bottom: 'fc7' top: 'fc7' name: 'bnfc7' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer {  bottom: "fc7"  top: "fc7"  name: "relu7"  type: "ReLU"}

# kernel_size 3 -> 3
# fc6-deconv
layer { bottom: 'fc7' top: 'fc6-deconv' name: 'fc6-deconv' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 512 kernel_size: 3 pad: 1}}

layer { bottom: 'fc6-deconv' top: 'fc6-deconv' name: 'fc6-deconv-bn' type: "BatchNorm" 
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'fc6-deconv' top: 'fc6-deconv' name: 'fc6-deconv-relu' type: "ReLU" }

# 7 x 7
# unpool5
layer { type: "Unpooling"  bottom: "fc6-deconv"  bottom: "pool5_mask"  top: "unpool5"  name: "unpool5"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2   unpool_size: 0 }
}

# 14 x 14
# deconv5_1
layer { bottom: 'unpool5' top: 'deconv5_1' name: 'deconv5_1' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 512	pad: 1	kernel_size: 3}}

layer { bottom: 'deconv5_1' top: 'deconv5_1' name: 'debn5_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv5_1' top: 'deconv5_1' name: 'derelu5_1' type: "ReLU" }
# deconv5_2
layer { bottom: 'deconv5_1' top: 'deconv5_2' name: 'deconv5_2' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 512	pad: 1	kernel_size: 3}}

layer { bottom: 'deconv5_2' top: 'deconv5_2' name: 'debn5_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv5_2' top: 'deconv5_2' name: 'derelu5_2' type: "ReLU" }
# deconv5_3
layer { bottom: 'deconv5_2' top: 'deconv5_3' name: 'deconv5_3' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 512	pad: 1	kernel_size: 3}}

layer { bottom: 'deconv5_3' top: 'deconv5_3' name: 'debn5_3' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv5_3' top: 'deconv5_3' name: 'derelu5_3' type: "ReLU" }

# unpool4
layer { type: "Unpooling"  bottom: "deconv5_3"  bottom: "pool4_mask"  top: "unpool4"  name: "unpool4"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2   unpool_size: 0 }
}

# 28 x 28
# deconv4_1
layer { bottom: 'unpool4' top: 'deconv4_1' name: 'deconv4_1' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 512	pad: 1	kernel_size: 3}}

layer { bottom: 'deconv4_1' top: 'deconv4_1' name: 'debn4_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv4_1' top: 'deconv4_1' name: 'derelu4_1' type: "ReLU" }
# deconv 4_2
layer { bottom: 'deconv4_1' top: 'deconv4_2' name: 'deconv4_2' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 512	pad: 1	kernel_size: 3}}

layer { bottom: 'deconv4_2' top: 'deconv4_2' name: 'debn4_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv4_2' top: 'deconv4_2' name: 'derelu4_2' type: "ReLU" }
# deconv 4_3
layer { bottom: 'deconv4_2' top: 'deconv4_3' name: 'deconv4_3' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 256	pad: 1	kernel_size: 3}}

layer { bottom: 'deconv4_3' top: 'deconv4_3' name: 'debn4_3' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv4_3' top: 'deconv4_3' name: 'derelu4_3' type: "ReLU" }

# unpool3
layer { type: "Unpooling"  bottom: "deconv4_3"  bottom: "pool3_mask"  top: "unpool3"  name: "unpool3"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2   unpool_size: 0 }
}

# 56 x 56
# deconv3_1
layer { bottom: 'unpool3' top: 'deconv3_1' name: 'deconv3_1' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output:256	pad:1	kernel_size: 3}}

layer { bottom: 'deconv3_1' top: 'deconv3_1' name: 'debn3_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv3_1' top: 'deconv3_1' name: 'derelu3_1' type: "ReLU" }
# deconv3_2
layer { bottom: 'deconv3_1' top: 'deconv3_2' name: 'deconv3_2' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output:256	pad:1	kernel_size: 3}}

layer { bottom: 'deconv3_2' top: 'deconv3_2' name: 'debn3_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv3_2' top: 'deconv3_2' name: 'derelu3_2' type: "ReLU" }
# deconv3_3
layer { bottom: 'deconv3_2' top: 'deconv3_3' name: 'deconv3_3' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output:128	pad:1	kernel_size: 3}}

layer { bottom: 'deconv3_3' top: 'deconv3_3' name: 'debn3_3' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv3_3' top: 'deconv3_3' name: 'derelu3_3' type: "ReLU" }

# unpool2
layer { type: "Unpooling"  bottom: "deconv3_3"  bottom: "pool2_mask"  top: "unpool2"  name: "unpool2"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2   unpool_size: 0 }
}

# 112 x 112
# deconv2_1
layer { bottom: 'unpool2' top: 'deconv2_1' name: 'deconv2_1' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output:128	pad:1	kernel_size: 3}}

layer { bottom: 'deconv2_1' top: 'deconv2_1' name: 'debn2_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv2_1' top: 'deconv2_1' name: 'derelu2_1' type: "ReLU" }
# deconv2_2
layer { bottom: 'deconv2_1' top: 'deconv2_2' name: 'deconv2_2' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output:64	pad:1	kernel_size: 3}}

layer { bottom: 'deconv2_2' top: 'deconv2_2' name: 'debn2_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv2_2' top: 'deconv2_2' name: 'derelu2_2' type: "ReLU" }

# unpool1
layer { type: "Unpooling"  bottom: "deconv2_2"  bottom: "pool1_mask"  top: "unpool1"  name: "unpool1"
  unpooling_param {   unpool: MAX   kernel_size: 2    stride: 2   unpool_size: 0 }
}

# deconv1_1
layer { bottom: 'unpool1' top: 'deconv1_1' name: 'deconv1_1' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output:64	pad:1	kernel_size: 3}}

layer { bottom: 'deconv1_1' top: 'deconv1_1' name: 'debn1_1' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv1_1' top: 'deconv1_1' name: 'derelu1_1' type: "ReLU" }

# deconv1_2
layer { bottom: 'deconv1_1' top: 'deconv1_2' name: 'deconv1_2' type: "Deconvolution"
  param {lr_mult: 1 decay_mult: 1}
  param {lr_mult: 2 decay_mult: 0}
  convolution_param { num_output:64     pad:1   kernel_size: 3}}

layer { bottom: 'deconv1_2' top: 'deconv1_2' name: 'debn1_2' type: "BatchNorm"
  bn_param { scale_filler { type: 'constant' value: 1 }
             shift_filler { type: 'constant' value: 0.001 }
              } }

layer { bottom: 'deconv1_2' top: 'deconv1_2' name: 'derelu1_2' type: "ReLU" }

################ seg-score #################
## resolution : 1
layer { 
  bottom: 'deconv1_2' 
  top: 'seg_score_${EXP}'
  name: 'seg_score_${EXP}' 
  type: "Convolution" 
  param {lr_mult: 10 decay_mult: 1}
  param {lr_mult: 20 decay_mult: 0}
  convolution_param { 
    num_output: ${NUM_LABELS} 
    kernel_size: 1 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

## loss
layer {
  name: "loss_res1"
  type: "SoftmaxWithLoss"
  bottom: "seg_score_${EXP}"
  bottom: "label"
  loss_param {
    ignore_label: 255
  }
  include: { phase: TRAIN }
}

layer {
  name: "accuracy_res1"
  type: "SegAccuracy"
  bottom: "seg_score_${EXP}"
  bottom: "label"
  top: "accuracy_res1"
  seg_accuracy_param {
    ignore_label: 255
  } 
}

## resolution: 1/2
layer { 
  bottom: "deconv2_2"
  top: "seg_score_deconv2"
  name: "seg_score_deconv2"
  type: "Convolution" 
  param {lr_mult: 10 decay_mult: 1}
  param {lr_mult: 20 decay_mult: 0}
  convolution_param { 
    num_output: ${NUM_LABELS} 
    kernel_size: 1 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "label_res2"
  type: "Resize"
  bottom: "label"
  top: "label_res2"
  resize_param {
    resize_ratio: 0.5
  }
}

## loss
layer {
  name: "loss_res2"
  type: "SoftmaxWithLoss"
  bottom: "seg_score_deconv2"
  bottom: "label_res2"
  loss_param {
    ignore_label: 255
  }
  include: { phase: TRAIN }
}

layer {
  name: "accuracy_res2"
  type: "SegAccuracy"
  bottom: "seg_score_deconv2"
  bottom: "label_res2"
  top: "accuracy_res2"
  seg_accuracy_param {
    ignore_label: 255
  } 
}

## resolution: 1/4
layer { 
  bottom: "deconv3_3"
  top: "seg_score_deconv3"
  name: "seg_score_deconv3"
  type: "Convolution" 
  param {lr_mult: 10 decay_mult: 1}
  param {lr_mult: 20 decay_mult: 0}
  convolution_param { 
    num_output: ${NUM_LABELS} 
    kernel_size: 1 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "label_res4"
  type: "Resize"
  bottom: "label_res2"
  top: "label_res4"
  resize_param {
    resize_ratio: 0.5
  }
}

## loss
layer {
  name: "loss_res4"
  type: "SoftmaxWithLoss"
  bottom: "seg_score_deconv3"
  bottom: "label_res4"
  loss_param {
    ignore_label: 255
  }
  include: { phase: TRAIN }
}

layer {
  name: "accuracy_res4"
  type: "SegAccuracy"
  bottom: "seg_score_deconv3"
  bottom: "label_res4"
  top: "accuracy_res4"
  seg_accuracy_param {
    ignore_label: 255
  } 
}
